# Base on examples in https://github.com/actions/starter-workflows/blob/main/pages/
# For this workflow, you need to enable GitHub pages in the repository settings,
# using the "GitHub Actions" option.

name: mkdocs
on:
  push:
    branches:
    # Run tests for change on the main branch ...
    - main
    tags-ignore:
    # ... but not for tags (avoids duplicate work).
    - '**'
  pull_request:
  # Run tests on pull requests

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install development version
        run: |
          pip install -e .[dev]
      - name: Build mkdocs
        run: mkdocs build --clean --verbose
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site/

  deploy:
    # Only deploy if we're on the main branch.
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
